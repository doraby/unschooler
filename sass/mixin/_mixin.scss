/**
* letter-spacing
*/
@mixin letter-spacing($ps, $size) {
    letter-spacing: $ps * $size / 1000 + px;
}

/**
* sprite
*/
@mixin sprite($img) {
    background-image: url("../images/#{nth($img, 9)}");
    background-repeat: no-repeat;
    background-position: nth($img, 3) nth($img, 4);
    width: nth($img, 5);
    height: nth($img, 6);
}

/**
* breakpoints custom
*/
@mixin breakpointmedia( $value, $operator: 'min-width',  $orient: false, $query: 'screen') {
    @if ($orient){
        @media #{$query} and (#{$operator}: #{$value}px) and ('orientation': #{$orient}) {
            @content;
        }
    }@else{
        @media #{$query} and (#{$operator}: #{$value}px) {
            @content;
        }
    }
}

/**
* breakpoints custom
*/
@mixin breakpointmediaMinMax($valueMin, $valueMax, $query: 'screen') {
    @media only #{$query} and (max-width: #{$valueMax}px) and (min-width: #{$valueMin}px) {
        @content;
    }
}

/**
* clearfix
*/
@mixin clearfix {
    &:after { content: ""; display: block; clear: both; }
}

/**
* verticatfix
*/
@mixin verticatfix() {
    font-size: 0;
    &:after {
        display: inline-block;
        vertical-align: middle;
        height: 100%;
        width: 0;
        content: "";
    }
}

/**
* list_jst
*/
@mixin list_jst {
    text-align: justify;
    line-height: 0;
    text-justify: newspaper;
    :after {content: ''; display: inline-block; width: 100%;}
}


/**
* hold-center
*/
@mixin hold-center($blockWidth: auto, $blockMinWidth: 0, $blockMaxWidth: auto, $blockType: fixed) {
    $blockMargin: auto;
    @if ($blockType == fixed) {
        @if ($blockWidth == auto) {
            $blockMargin: 0;
        }
        width: $blockWidth;
    } @else if ($blockType == flex) {
        max-width: $blockMaxWidth;
        min-width: $blockMinWidth;
    } @else {
        width: $blockWidth;
    }
    margin: $blockMargin;
}

/**
* core-justify
*/
@mixin core-justify() {
    font-size: 0;
    text: {
        align: justify;
        justify: newspaper;
    }

    &:after {
        display: inline-block;
        width: 100%;
        content: '';
    }
}

/**
* placeholder
*/
@mixin placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

/**
* placeholder
*/


/**
* triangle
*/
@mixin triangle($direction: up, $size: 5px, $color: #000000) {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    display: block;

    @if $direction == up {
        border-right: $size solid transparent;
        border-left: $size solid transparent;
        border-bottom: $size solid $color;
        border-top: none;
    }

    @if $direction == down {
        border-right: $size solid transparent;
        border-left: $size solid transparent;
        border-top: $size solid $color;
        border-bottom: none;
    }

    @if $direction == right {
        border: $size solid transparent;
        border-left: $size solid $color;
    }

    @if $direction == left {
        border: $size solid transparent;
        border-right: $size solid $color;
    }

    @if $direction == upleft {
        border: $size solid transparent;
        border-top: $size solid $color;
        border-left: $size solid $color;
    }

    @if $direction == upright {
        border: $size solid transparent;
        border-top: $size solid $color;
        border-right: $size solid $color;
    }

    @if $direction == bottom-right {
        border: $size solid transparent;
        border-bottom: $size solid $color;
        border-right: $size solid $color;
    }

    @if $direction == bottom-left {
        border: $size solid transparent;
        border-bottom: $size solid $color;
        border-left: $size solid $color;
    }
}
